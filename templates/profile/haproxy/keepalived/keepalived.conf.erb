global_defs {
  notification_email {
    <%= @email %>
  }
  notification_email_from <%= @email %>
  smtp_server localhost
  smtp_connect_timeout 60
  enable_script_security
}

vrrp_script check_haproxy {
  script "/usr/bin/haproxyctl show health"
  timeout 1
  interval 2
  weight 2
}

vrrp_instance haproxy {
  <% if @master %>
  state MASTER
  priority 101
  <% else %>
  state BACKUP
  priority 100
  <% end %>

  interface <%= @networking['primary'] %>
  virtual_router_id 51
  virtual_ipaddress {
    <%- @services.each do |_,service| -%>
      <%= service["floating_ip"] %>
    <%- end -%>
  }

  unicast_src_ip <%= @networking["ip"] %>
  unicast_peer {
  <%-
  nodes = (@nodes_for_class & @nodes_for_datacenter)
    .map{|node_id| scope.call_function('fact_for', [node_id, 'networking'])}
    .map{|networking| networking['ip']}
    .select{ |ip| ip != @networking['ip'] }
  -%>
  <%- nodes.each do |ip| -%>
    <%= ip %>
  <%- end -%>
  }

  track_script {
    check_haproxy
  }
}
